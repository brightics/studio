{
  "__package_comment": "json to load package info to database",
  "packageName": "kafka",
  "versionList": [
    {
      "__version_comment": "If isDefault is not defined, it will be <false>.",
      "versionNumber": "0.8.2.1",
      "isDefault": true
    }
  ],
  "modeList": [
    {
      "__mode_comment": "If isDefault is not defined, it will be <false>. If haAvailable is not defined, it will be <false>. If runnable is not defined, it will be <true>.",
      "modeName": "",
      "haAvailable": false,
      "isDefault": true,
      "runnable": true
    }
  ],
  "packageDesc": "a distributed, partitioned, replicated commit log service. It provides the functionality of a messaging system, but with a unique design.",
  "componentList": [
    {
      "__component_comment": "If deployType is not defined, it will be <all>.",
      "componentName": "kafka-zookeeper",
      "componentLabel": "Kafka-Zookeeper",
      "description": "Kafka inner Zookeeper",
      "deployType": "all"
    },
    {
      "__component_comment": "If deployType is not defined, it will be <all>.",
      "componentName": "kafka",
      "componentLabel": "Kafka",
      "description": "Kafka server daemon",
      "deployType": "all"
    },
    {
      "__component_comment": "If deployType is not defined, it will be <all>.",
      "componentName": "kafka-manager",
      "componentLabel": "Kafka-Manager",
      "description": "Kafka manager",
      "deployType": "master"
    }
  ],
  "propertyList": [
    {
      "__property_comment": "If modeList is not defined or is empty list, it means all modes are selected.",
      "key": "clientPort",
      "value": "12181",
      "type": "TCP_PORT",
      "description": "the port to listen for client connections; that is, the port that clients attempt to connect to."
    },
    {
      "key": "dataDir",
      "value": "tmp/zookeeper",
      "description": "the location where ZooKeeper will store the in-memory database snapshots and, unless specified otherwise, the transaction log of updates to the database."
    },
    {
      "key": "log.dirs",
      "value": "tmp/kafka-logs",
      "description": "A comma-separated list of one or more directories in which Kafka data is stored. Each new partition that is created will be placed in the directory which currently has the fewest partitions."
    },
    {
      "key": "maxClientCnxns",
      "value": "0",
      "description": "Limits the number of concurrent connections (at the socket level) that a single client, identified by IP address, may make to a single member of the ZooKeeper ensemble. This is used to prevent certain classes of DoS attacks, including file descriptor exhaustion. The default is 60. Setting this to 0 entirely removes the limit on concurrent connections."
    },
    {
      "key": "initLimit",
      "value": "10",
      "description": "Amount of time, in ticks to allow followers to connect and sync to a leader. Increased this value as needed, if the amount of data managed by ZooKeeper is large."
    },
    {
      "key": "syncLimit",
      "value": "5",
      "description": "Amount of time, to allow followers to sync with ZooKeeper. If followers fall too far behind a leader, they will be dropped."
    },
    {
      "key": "leader.port",
      "value": "12888",
      "type": "TCP_PORT",
      "description": "the port to connection for followers to leader."
    },
    {
      "key": "leader.election.port",
      "value": "13888",
      "type": "TCP_PORT",
      "description": "the port to elect a leader of followers."
    },
    {
      "key": "port",
      "value": "9092",
      "type": "TCP_PORT",
      "description": "The port on which the server accepts client connections."
    },
    {
      "key": "num.network.threads",
      "value": "3",
      "description": "The number of network threads that the server uses for handling network requests. "
    },
    {
      "key": "num.io.threads",
      "value": "8",
      "description": "The number of I/O threads that the server uses for executing requests. You should have at least as many threads as you have disks."
    },
    {
      "key": "socket.send.buffer.bytes",
      "value": "102400",
      "description": "The SO_SNDBUFF buffer the server prefers for socket connections."
    },
    {
      "key": "socket.receive.buffer.bytes",
      "value": "102400",
      "description": "The SO_RCVBUFF buffer the server prefers for socket connections."
    },
    {
      "key": "socket.request.max.bytes",
      "value": "104857600",
      "description": "The maximum request size the server will allow. This prevents the server from running out of memory and should be smaller than the Java heap size."
    },
    {
      "key": "num.partitions",
      "value": "1",
      "description": "The default number of partitions per topic if a partition count isn't given at topic creation time."
    },
    {
      "key": "num.recovery.threads.per.data.dir",
      "value": "1",
      "description": "The number of threads per data directory to be used for log recovery at startup and flushing at shutdown."
    },
    {
      "key": "log.retention.hours",
      "value": "168",
      "description": "The amount of time to keep a log segment before it is deleted, i.e. the default data retention window for all topics."
    },
    {
      "key": "log.retention.bytes",
      "value": "10737418240",
      "description": "The maximum size of the log before deleting it."
    },
    {
      "key": "log.segment.bytes",
      "value": "1073741824",
      "description": "The log for a topic partition is stored as a directory of segment files. This setting controls the size to which a segment file will grow before a new segment is rolled over in the log. This setting can be overridden on a per-topic basis."
    },
    {
      "key": "log.retention.check.interval.ms",
      "value": "300000",
      "description": "The period with which we check whether any log segment is eligible for deletion to meet the retention policies."
    },
    {
      "key": "log.cleaner.enable",
      "value": "false",
      "description": "This configuration must be set to true for log compaction to run."
    },
    {
      "key": "delete.topic.enable",
      "value": "true",
      "description": "Enables delete topic. Delete topic through the admin tool will have no effect if this config is turned off."
    },
    {
      "key": "zookeeper.connection.timeout.ms",
      "value": "6000",
      "description": "The maximum amount of time that the client waits to establish a connection to zookeeper."
    },
    {
      "key": "PID_DIR",
      "value": "tmp",
      "description": "Kafka PID file directory path"
    },
    {
      "key": "kafka_logs_dir",
      "value": "kafka/logs",
      "description": "Kafka Log directory path",
      "type": "LOG_DIR"
    },
    {
      "key": "kafka-manager_port",
      "value": "8087",
      "type": "TCP_PORT",
      "description": "kafka-manager port"
    },
    {
      "key": "kafka-manager_logs",
      "value": "kafka-manager/logs",
      "description": "Kafka-manager Log directory path",
      "type": "LOG_DIR"
    }
  ],
  "configList": [
    {
      "__config_comment": "If visible is not defined, it will be true.",
      "fileName": "kafka-run-class.sh.erb",
      "visible": false,
      "description": ""
    },
    {
      "fileName": "server.properties.erb",
      "visible": true,
      "description": ""
    },
    {
      "fileName": "kafka-server-stop.sh.erb",
      "visible": false,
      "description": ""
    },
    {
      "fileName": "zookeeper-server-stop.sh.erb",
      "visible": false,
      "description": ""
    },
    {
      "fileName": "zookeeper.properties.erb",
      "visible": true,
      "description": ""
    },
    {
      "fileName": "log4j.properties.erb",
      "visible": true,
      "description": ""
    },
    {
      "fileName": "tools-log4j.properties.erb",
      "visible": true,
      "description": ""
    }
  ],
  "isRemovable": true,
  "startOrder": ["Kafka-Zookeeper", "Kafka", "Kafka-Manager"],
  "stopOrder": ["Kafka-Manager", "Kafka", "Kafka-Zookeeper"]
}
