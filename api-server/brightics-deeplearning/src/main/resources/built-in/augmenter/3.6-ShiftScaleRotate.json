{
  "_label": "ShiftScaleRotate",
  "_description": "Randomly apply affine transforms: translate, scale and rotate the input.",
  "_composition": false,
  "_tags": [
    "image",
    "classification"
  ],
  "module": "brightics.deeplearning.wrapper.albumentations_wrapper",
  "name": "ShiftScaleRotate",
  "updateVersion": "3.6",
  "params": {
    "shift_limit": {
      "_value": "0.0625",
      "_description": "Shift factor range for both height and width. If shift_limit is a single float value, the range will be (-shift_limit, shift_limit). Absolute values for lower and upper bounds should lie in range [0, 1].",
      "_label": "shift_limit",
      "_optional": false,
      "_type": "string",
      "_control": "input",
      "_advancedOption": false
    },
    "scale_limit": {
      "_value": "0.1",
      "_description": "Scaling factor range. If scale_limit is a single float value, the range will be (-scale_limit, scale_limit).",
      "_label": "scale_limit",
      "_optional": false,
      "_type": "string",
      "_control": "input",
      "_advancedOption": false
    },
    "rotate_limit": {
      "_value": "45",
      "_description": "Rotation range. If rotate_limit is a single int value, the range will be (-rotate_limit, rotate_limit).",
      "_label": "rotate_limit",
      "_optional": false,
      "_type": "string",
      "_control": "input",
      "_advancedOption": false
    },
    "interpolation": {
      "_value": 1,
      "_description": "Flag that is used to specify the interpolation algorithm. Should be one of: 0 (cv2.INTER_NEAREST), 1 (cv2.INTER_LINEAR), 2 (cv2.INTER_CUBIC), 3 (cv2.INTER_AREA), 4 (cv2.INTER_LANCZOS4).",
      "_label": "interpolation",
      "_optional": false,
      "_type": "number",
      "_control": "input",
      "_advancedOption": false
    },
    "border_mode": {
      "_value": 4,
      "_description": "Flag that is used to specify the pixel extrapolation method. Should be one of: 0 (cv2.BORDER_CONSTANT), 1 (cv2.BORDER_REPLICATE), 2 (cv2.BORDER_REFLECT), 3 (cv2.BORDER_WRAP), 4 (cv2.BORDER_REFLECT_101).",
      "_label": "border_mode",
      "_optional": false,
      "_type": "number",
      "_control": "input",
      "_advancedOption": false
    },
    "value": {
      "_description": "Padding value if border_mode is cv2.BORDER_CONSTANT.",
      "_label": "value",
      "_optional": true,
      "_type": "string",
      "_control": "input",
      "_advancedOption": false
    },
    "always_apply": {
      "_value": false,
      "_description": "If True, the augmentation is always applied.",
      "_label": "always_apply",
      "_optional": false,
      "_type": "boolean",
      "_control": "checkbox",
      "_advancedOption": false
    },
    "p": {
      "_value": 0.5,
      "_description": "Probability of applying the transform.",
      "_label": "p",
      "_optional": false,
      "_type": "number",
      "_control": "input",
      "_advancedOption": false
    }
  }
}