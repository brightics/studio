{
  "_label": "Template - MNIST Test",
  "_description": "This is an example input function for evaluation or inference. This input function generates 10,000 images of hand written digits and their corresponding labels, which is known as MNIST testing set.",
  "_tags": [
    "image",
    "classification"
  ],
  "_deprecated": false,
  "module": "brightics.deeplearning.input_function.image",
  "updateVersion": "3.7",
  "name": "common_basic_setting",
  "params": {
    "loader": {
      "_label": "Loader",
      "_description": "Select a loader.",
      "_type": "module",
      "_control": "moduleSelector",
      "_moduleName": "loader",
      "_value": {
        "module": "brightics.deeplearning.dataflow.image.loader.from_datasets.mnist",
        "updateVersion": "3.7",
        "name": "ImageClassificationMNIST",
        "params": {
          "datadir": {
            "_value": "data/mnist",
            "_description": "Data directory containing images",
            "_label": "Data Directory",
            "_optional": false,
            "_type": "string",
            "_control": "input",
            "_advancedOption": false
          },
          "mode": {
            "_value": "test",
            "_description": "train or test",
            "_label": "Mode",
            "_optional": true,
            "_type": "string",
            "_control": "input",
            "_advancedOption": false
          },
          "shuffle": {
            "_value": false,
            "_description": "Generate shuffled data.",
            "_label": "Shuffle",
            "_optional": true,
            "_type": "boolean",
            "_control": "input",
            "_advancedOption": false
          }
        },
        "_label": "Sample Dataset Loader (MNIST)",
        "_description": "MNIST image classification loader.",
        "_tags": [
          "image",
          "classification",
          "loader",
          "mnist"
        ],
        "_specType": "basic",
        "_deprecated": false
      },
      "_optional": false,
      "_advancedOption": false
    },
    "transformer": {
      "_label": "Transformer",
      "_description": "Transformer description",
      "_type": "parameters",
      "module": "builtins",
      "name": "dict",
      "params": {
        "augmenters": {
          "_label": "Augmenters",
          "_description": "Augmenters description",
          "_type": "module[]",
          "_control": "moduleTree",
          "_moduleName": "augmenter",
          "_value": [],
          "_optional": true,
          "_advancedOption": false
        },
        "postprocessors": {
          "_label": "Post-processor",
          "_description": "Post-processors description description",
          "_type": "module[]",
          "_control": "moduleTree",
          "_moduleName": "augmenter",
          "_value": [],
          "_optional": true,
          "_advancedOption": false
        },
        "parameters": {
          "_label": "Parameters",
          "_description": "Parameters description",
          "_type": "parameters",
          "module": "builtins",
          "name": "dict",
          "params": {
            "repeat": {
              "_label": "Repeat",
              "_description": "Repeat Description",
              "_type": "number",
              "_control": "input",
              "_value": 1,
              "_optional": false,
              "_advancedOption": false
            },
            "batch_size": {
              "_label": "Batch Size",
              "_description": "Batch Size Description",
              "_type": "number",
              "_control": "input",
              "_value": 64,
              "_optional": false,
              "_advancedOption": false
            },
            "remainder": {
              "_label": "Remainder",
              "_description": "When the remaining datapoints in ds is not enough to form a batch, whether or not to also produce the remaining data as a smaller batch. If set to False, all produced datapoints are guaranteed to have the same batch size. If set to True, len(ds) must be accurate.",
              "_type": "boolean",
              "_control": "checkbox",
              "_value": true,
              "_optional": false,
              "_advancedOption": false
            },
            "prefetch_buffer_size": {
              "_label": "Prefetch Buffer Size",
              "_description": "Maximum number of elements that will be buffered when prefetching.",
              "_type": "number",
              "_control": "input",
              "_value": 10,
              "_optional": true,
              "_advancedOption": false
            },
            "mapdata_func": {
              "_label": "Mapdata",
              "_description": "Mapdata Description",
              "_type": "module",
              "_control": "moduleSelector",
              "_moduleName": "mapdata",
              "_optional": true,
              "_advancedOption": true,
              "_value": {}
            }
          }
        }
      }
    }
  }
}