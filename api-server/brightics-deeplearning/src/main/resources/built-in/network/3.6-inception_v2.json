{
  "_description": "Inception V2 Network",
  "_label": "Inception V2",
  "params": {
    "num_classes": {
      "_value": 1000,
      "_description": "Number of predicted classes.",
      "_label": "Number Of Classes",
      "_optional": false,
      "_type": "number",
      "_control": "input",
      "_advancedOption": false
    },
    "input_shape": {
      "_value": "224,224,3",
      "_description": "The shape of input tensor. If the value is '28,32,3', the height is 28, width is 32, and the number of channels is 3. The values is separated by comma. Only 3 dimension shape is allowed. Default is '224,224,3'.",
      "_label": "Input Shape",
      "_optional": true,
      "_type": "string",
      "_control": "input",
      "_advancedOption": false
    },
    "fine_tune": {
      "_value": true,
      "_description": "If True, all trainable variables in network will be trained. If False, only variables in the parameter 'Trainable Scopes' will be trained.",
      "_label": "Fine Tune",
      "_optional": true,
      "_type": "boolean",
      "_control": "checkbox",
      "_advancedOption": true
    },
    "trainable_scopes": {
      "_value": "InceptionV2/Logits",
      "_description": "Scopes to be trained. Ignored when 'Fine Tune' is True.",
      "_label": "Trainable Scopes",
      "_optional": true,
      "_type": "string",
      "_control": "input",
      "_advancedOption": true
    },
    "dropout_keep_prob": {
      "_value": 0.8,
      "_description": "The percentage of activation values that are retained.",
      "_label": "Dropout Keep Probability",
      "_optional": true,
      "_type": "number",
      "_control": "input",
      "_advancedOption": true
    },
    "min_depth": {
      "_value": 16,
      "_description": "Minimum depth value (number of channels) for all convolution ops. Enforced when depth_multiplier < 1, and not an active constraint when depth_multiplier >= 1.",
      "_label": "Minimum Depth",
      "_optional": true,
      "_type": "number",
      "_control": "input",
      "_advancedOption": true
    },
    "depth_multiplier": {
      "_value": 1.0,
      "_description": "Float multiplier for the depth (number of channels) for all convolution ops. The value must be greater than zero. Typical usage will be to set this value in (0, 1) to reduce the number of parameters or computation cost of the model.",
      "_label": "Depth Multiplier",
      "_optional": true,
      "_type": "number",
      "_control": "input",
      "_advancedOption": true
    },
    "spatial_squeeze": {
      "_value": true,
      "_description": "If True logits is of shape [B, C], if False logits is of shape [B, 1, 1, C], where B is batch_size and C is number of classes.",
      "_label": "Spatial Squeeze",
      "_optional": true,
      "_type": "boolean",
      "_control": "checkbox",
      "_advancedOption": true
    },
    "weight_decay": {
      "_value": 0.00004,
      "_description": "The weight decay to use for regularizing the model.",
      "_label": "Weight Decay",
      "_optional": true,
      "_type": "number",
      "_control": "input",
      "_advancedOption": true
    },
    "use_batch_norm": {
      "_value": true,
      "_description": "If True, batch_norm is applied after each convolution.",
      "_label": "Use Batch Normalization",
      "_optional": true,
      "_type": "boolean",
      "_control": "checkbox",
      "_advancedOption": true
    },
    "batch_norm_decay": {
      "_value": 0.9997,
      "_description": "Decay for batch norm moving average.",
      "_label": "Batch Normalization Decay",
      "_optional": true,
      "_type": "number",
      "_control": "input",
      "_advancedOption": true
    },
    "batch_norm_epsilon": {
      "_value": 0.001,
      "_description": "Small float added to variance to avoid dividing by zero in batch norm.",
      "_label": "Batch Normalization Epsilon",
      "_optional": true,
      "_type": "number",
      "_control": "input",
      "_advancedOption": true
    },
    "batch_norm_scale": {
      "_value": false,
      "_description": "If True, uses an explicit `gamma` multiplier to scale the activations in the batch normalization layer.",
      "_label": "Batch Normalization Scale",
      "_optional": true,
      "_type": "boolean",
      "_control": "checkbox",
      "_advancedOption": true
    }
  },
  "_tags": [
    "image",
    "classification",
    "network",
    "inception"
  ],
  "_deprecated": false,
  "module": "brightics.deeplearning.model_function.image.classification.network",
  "name": "InceptionV2Model",
  "updateVersion": "3.6"
}