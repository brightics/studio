{
  "_label": "Input Function Spec",
  "_description": "Input Function Spec - common",
  "_tags": [
    "image",
    "classification"
  ],
  "params": {
    "loader": {
      "_label": "Loader",
      "_description": "Select a loader.",
      "_type": "module",
      "_control": "moduleSelector",
      "_moduleName": "loader",
      "_value": {
        "_description": "Image classification loader from an annotation csv file.",
        "_label": "Image Classification Loader(CSV)",
        "params": {
          "csvfile": {
            "_value": "path/to/csv",
            "_description": "Annotation csv file containing image file path and it's label",
            "_label": "Annotation CSV File",
            "_optional": false,
            "_type": "string",
            "_control": "input",
            "_advancedOption": false
          },
          "datadir": {
            "_value": "path/to",
            "_description": "Data directory containing images",
            "_label": "Data Directory",
            "_optional": false,
            "_type": "string",
            "_control": "input",
            "_advancedOption": false
          },
          "encoding": {
            "_value": "utf-8",
            "_description": "Encoding to use for UTF when reading/writing (ex. utf-8)",
            "_label": "Encoding",
            "_optional": true,
            "_type": "string",
            "_control": "input",
            "_advancedOption": true
          },
          "label_sep": {
            "_value": "\\s",
            "_description": "For multi-label problem, label text is split by this parameter value. This value will be interpreted as regular expressions and will also force the use of the Python parsing engine.",
            "_label": "Label Separator",
            "_optional": true,
            "_type": "string",
            "_control": "input",
            "_advancedOption": true
          },
          "sep": {
            "_value": ",",
            "_description": "Delimiter to use. Filename(sep)label",
            "_label": "Delimiter",
            "_optional": true,
            "_type": "string",
            "_control": "input",
            "_advancedOption": false
          },
          "shuffle": {
            "_value": true,
            "_description": "Generate shuffled data.",
            "_label": "Shuffle",
            "_optional": true,
            "_type": "boolean",
            "_control": "input",
            "_advancedOption": false
          },
          "rgb": {
            "_value": true,
            "_description": "This parameter determines the color format. If True, then the color format is given as RGB. Otherwise, it is given as BGR.",
            "_label": "Color Format (RGB)",
            "_optional": true,
            "_type": "boolean",
            "_control": "input",
            "_advancedOption": false
          },
          "header": {
            "_description": "Row number to use as the column names, and the start of the data.",
            "_label": "Header",
            "_type": "number",
            "_optional": true,
            "_control": "input",
            "_advancedOption": true
          },
          "comment": {
            "_value": "#",
            "_description": "Indicate remainder of line should not be parsed. For example, if comment=\"#\", parsing#empty\\na,b,c\\n1,2,3 with header=0 will result in \"a,b,c\" being treated as the header.",
            "_label": "Comment",
            "_type": "string",
            "_optional": true,
            "_control": "input",
            "_advancedOption": true
          }
        },
        "_tags": [
          "image",
          "classification",
          "loader"
        ],
        "_deprecated": false,
        "module": "brightics.deeplearning.dataflow.image.loader",
        "name": "ImageClassificationFromCSV",
        "updateVersion": "3.6"
      },
      "_optional": false,
      "_advancedOption": false
    },
    "transformer": {
      "_label": "Transformer",
      "_description": "Transformer description",
      "_type": "parameters",
      "module": "builtins",
      "name": "dict",
      "params": {
        "augmenters": {
          "_label": "Augmenters",
          "_description": "Augmenters description",
          "_type": "module[]",
          "_control": "moduleTree",
          "_moduleName": "augmenter",
          "_value": [],
          "_optional": true,
          "_advancedOption": false
        },
        "postprocessors": {
          "_label": "Post-processor",
          "_description": "Post-processors description description",
          "_type": "module[]",
          "_control": "moduleTree",
          "_moduleName": "augmenter",
          "_value": [
            {
              "_label": "ToFloat",
              "_description": "Divide pixel values by `max_value` to get a float32 output array where all values lie in the range [0, 1.0].",
              "_composition": false,
              "_tags": [
                "image",
                "classification"
              ],
              "module": "brightics.deeplearning.wrapper.albumentations_wrapper",
              "name": "ToFloat",
              "updateVersion": "3.6",
              "params": {
                "max_value": {
                  "_value": 255,
                  "_description": "Maximum possible input value.",
                  "_label": "max_value",
                  "_optional": false,
                  "_type": "number",
                  "_control": "input",
                  "_advancedOption": false
                },
                "always_apply": {
                  "_value": true,
                  "_description": "If True, the augmentation is always applied.",
                  "_label": "always_apply",
                  "_optional": false,
                  "_type": "boolean",
                  "_control": "checkbox",
                  "_advancedOption": false
                },
                "p": {
                  "_value": 1,
                  "_description": "Probability of applying the transform.",
                  "_label": "p",
                  "_optional": false,
                  "_type": "number",
                  "_control": "input",
                  "_advancedOption": false
                }
              }
            }
          ],
          "_optional": true,
          "_advancedOption": false
        },
        "parameters": {
          "_label": "Parameters",
          "_description": "Parameters description",
          "_type": "parameters",
          "module": "builtins",
          "name": "dict",
          "params": {
            "repeat": {
              "_label": "Repeat",
              "_description": "Number of times to repeat. Set to -1 to repeat infinite times.",
              "_type": "number",
              "_control": "input",
              "_value": 100,
              "_optional": false,
              "_advancedOption": false
            },
            "batch_size": {
              "_label": "Batch Size",
              "_description": "Batch Size",
              "_type": "number",
              "_control": "input",
              "_value": 64,
              "_optional": false,
              "_advancedOption": false
            },
            "remainder": {
              "_label": "Remainder",
              "_description": "When the remaining datapoints in ds is not enough to form a batch, whether or not to also produce the remaining data as a smaller batch. If set to False, all produced datapoints are guaranteed to have the same batch size. If set to True, len(ds) must be accurate.",
              "_type": "boolean",
              "_control": "checkbox",
              "_value": true,
              "_optional": false,
              "_advancedOption": false
            },
            "prefetch_buffer_size": {
              "_label": "Prefetch Buffer Size",
              "_description": "Maximum number of elements that will be buffered when prefetching.",
              "_type": "number",
              "_control": "input",
              "_value": 10,
              "_optional": true,
              "_advancedOption": false
            },
            "mapdata_func": {
              "_label": "Mapdata",
              "_description": "Mapdata Description",
              "_type": "module",
              "_control": "moduleSelector",
              "_moduleName": "mapdata",
              "_optional": true,
              "_advancedOption": true,
              "_value": {}
            }
          }
        }
      }
    }
  },
  "module": "brightics.deeplearning.input_function.image",
  "name": "common_basic_setting",
  "updateVersion": "3.6",
  "_deprecated": false
}