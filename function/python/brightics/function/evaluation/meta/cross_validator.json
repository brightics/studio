{
    "script": {
        "type": "",
        "content": ""
    },
    "specJson": {
        "category": "evaluation",
        "func": "brightics.function.evaluation$cross_validator",
        "name": "brightics.function.evaluation$cross_validator",
        "context": "python",
        "label": "Cross Validator",
        "summary": "Perform Cross Validation for classification/regression train functions.",
        "tutorialLink": "",
        "description": "Cross-validation, sometimes called rotation estimation or out-of-sample testing, is any of various similar model validation techniques for assessing how the results of a statistical analysis will generalize to an independent data set. It is mainly used in settings where the goal is prediction, and one wants to estimate how accurately a predictive model will perform in practice. In a prediction problem, a model is usually given a dataset of known data on which training is run (training dataset), and a dataset of unknown data (or first seen data) against which the model is tested (called the validation dataset or testing set). The goal of cross-validation is to test the model's ability to predict new data that was not used in estimating it, in order to flag problems like overfitting or selection bias and to give an insight on how the model will generalize to an independent dataset (i.e., an unknown dataset, for instance from a real problem).\n\nReference\n+ <https://en.wikipedia.org/wiki/Cross-validation_(statistics)>",
        "tags": [
            "cross validate"
        ],
        "version": "3.6",
        "inputs": {
            "table": ""
        },
        "outputs": {
            "model": ""
        },
        "meta": {
            "table": {
                "type": "table",
                "desc": "Input data set to be trained.",
                "optional": false
            },
            "model": {
                "type": "model",
                "desc": "Result of the cross validation."
            }
        },
        "params": [
            {
                "id": "cv_n_splits",
                "label": "K-Fold",
                "description": "Number of splits for cross validation. It should be bigger than or equal to 2.",
                "visibleOption": [],
                "control": "InputBox",
                "validation": [],
                "mandatory": true,
                "globalVariable": true,
                "placeHolder": "3 (value >= 2)",
                "type": "Integer",
                "defaultValue": "",
                "min": 2
            },
            {
                "id": "cv_scoring",
                "label": "Scoring",
                "description": "Scoring metric. Accuracy for classification, F1, Precision, and Recall for binary classification, R2 and Negative MSE for regression are available.",
                "visibleOption": [],
                "control": "RadioButton",
                "validation": [],
                "globalVariable": true,
                "type": "String",
                "items": [
                    {
                        "label": "Accuracy",
                        "value": "accuracy",
                        "default": true,
                        "item": ""
                    },
                    {
                        "label": "F1",
                        "value": "f1",
                        "default": false,
                        "item": ""
                    },
                    {
                        "label": "Precision",
                        "value": "precision",
                        "default": false,
                        "item": ""
                    },
                    {
                        "label": "Recall",
                        "value": "recall",
                        "default": false,
                        "item": ""
                    },
                    {
                        "label": "R2",
                        "value": "r2",
                        "default": false,
                        "item": ""
                    },
                    {
                        "label": "Negative MSE",
                        "value": "neg_mean_squared_error",
                        "default": false,
                        "item": ""
                    }
                ]
            },
            {
                "id": "cv_shuffle",
                "label": "Shuffle",
                "description": "Whether to perform shuffled cross validation.",
                "visibleOption": [],
                "control": "BooleanRadio",
                "validation": [],
                "globalVariable": false,
                "defaultValue": false
            },
            {
                "id": "cv_stratify",
                "label": "Stratify",
                "description": "Whether to perform stratified cross validation.",
                "visibleOption": [],
                "control": "BooleanRadio",
                "validation": [],
                "globalVariable": false,
                "defaultValue": false
            },
            {
                "id": "cv_seed",
                "label": "Seed for Cross Validation",
                "description": "Random seed for shuffled cross validation.",
                "visibleOption": [
                    {
                        "id": "cv_shuffle",
                        "value": true
                    }
                ],
                "control": "InputBox",
                "validation": [],
                "mandatory": false,
                "globalVariable": false,
                "placeHolder": "",
                "type": "Integer",
                "defaultValue": ""
            },
            {
                "id": "target_cv_func",
                "label": "Target Cross validation function",
                "description": "",
                "visibleOption": [
                    {
                        "id": "cv_n_splits",
                        "value": -999999999999999
                    }
                ],
                "control": "InputBox",
                "validation": [],
                "mandatory": false,
                "globalVariable": false,
                "placeHolder": "",
                "type": "String",
                "defaultValue": ""
            },
            {
                "id": "spec_json",
                "label": "Spec Json",
                "description": "",
                "visibleOption": [
                    {
                        "id": "cv_n_splits",
                        "value": -999999999999999
                    }
                ],
                "control": "InputBox",
                "validation": [],
                "mandatory": false,
                "globalVariable": false,
                "placeHolder": "",
                "type": "String",
                "defaultValue": ""
            }
        ],
        "pythonMultiEnvVisible": false
    },
    "md": {
        "en": "# Cross Validator\nPerform Cross Validation for classification/regression train functions.\n\n## Description\nCross-validation, sometimes called rotation estimation or out-of-sample testing, is any of various similar model validation techniques for assessing how the results of a statistical analysis will generalize to an independent data set. It is mainly used in settings where the goal is prediction, and one wants to estimate how accurately a predictive model will perform in practice. In a prediction problem, a model is usually given a dataset of known data on which training is run (training dataset), and a dataset of unknown data (or first seen data) against which the model is tested (called the validation dataset or testing set). The goal of cross-validation is to test the model's ability to predict new data that was not used in estimating it, in order to flag problems like overfitting or selection bias and to give an insight on how the model will generalize to an independent dataset (i.e., an unknown dataset, for instance from a real problem).\n\nThis function needs two inputs: an input table which will be the data set to be trained, and an input model which specifies which train function will be used to perform a cross validation. Once a train function is connected to this function, the original parameters will be displayed in the control panel. Note that the train function is only to specify the source train function, so it is not needed to set a parameter in the control panel of the original train function. (Actually, this function will not be run and just send an information to the cross validator function.)\n\nReference\n+ <https://en.wikipedia.org/wiki/Cross-validation_(statistics)>\n\n## Properties\n### VA\n#### INPUT\n1. **table**<b style=\"color:red\">*</b>: (Table) Input data set to be trained.\n#### OUTPUT\n1. **model**: (Model) Result of the cross validation.\n#### PARAMETER\n1. **K-Fold**<b style=\"color:red\">*</b>: Number of splits for cross validation. It should be bigger than or equal to 2.\n2. **Scoring**: Scoring metric. Accuracy for classification, F1, Precision, and Recall for binary classification, R2 and Negative MSE for regression are available.\n3. **Shuffle**: Whether to perform shuffled cross validation.\n4. **Stratify**: Whether to perform stratified cross validation.\n5. **Seed for Cross Validation**: Random seed for shuffled cross validation.\n\n### Python\n#### USAGE\n\n```\ncross_validator(table = , cv_n_splits = , cv_scoring = , cv_shuffle = False, cv_stratify = False, cv_seed = )\n```\n\n#### INPUT\n1. **table**<b style=\"color:red\">*</b>: (Table) Input data set to be trained.\n#### OUTPUT\n1. **model**: (Model) Result of the cross validation.\n#### PARAMETER\n1. **cv_n_splits**<b style=\"color:red\">*</b>: Number of splits for cross validation. It should be bigger than or equal to 2.\n\t* Type: *int*\n\t* Default / Range: 3 (value >= 2)\n2. **cv_scoring**: Scoring metric. Accuracy for classification, F1, Precision, and Recall for binary classification, R2 and Negative MSE for regression are available.\n\t* Type: *str*\n\t* Default / Range: accuracy ( accuracy | f1 | precision | recall | r2 | neg_mean_squared_error )\n3. **cv_shuffle**: Whether to perform shuffled cross validation.\n\t* Type: *bool*\n\t* Default value: false \n4. **cv_stratify**: Whether to perform stratified cross validation.\n\t* Type: *bool*\n\t* Default value: false \n5. **cv_seed**: Random seed for shuffled cross validation.\n\t* Type: *int*\n\t* Default value: None\n\n\n\n\n",
        "kr": "# Cross Validator\n이 함수는 분류/회귀 함수에 대한 교차 검증(cross validation)을 수행한다.\n\n## Description\n교차 검증(cross validation)은 모델 검증 테크닉의 한 종류로 통계적 분석이 다른 데이터 셋으로 얼마나 잘 일반화될 수 있는지를 알아볼 때에 사용된다. 주로 예측에 사용되며, 예측 모델이 실제로도 얼마나 정확하게 작동할 수 있는지를 가늠할 때 쓰인다. 예측 문제에서는 보통 모델에게 학습을 진행할 잘 알려진 데이터 셋이 주어지며 (학습 데이터셋) 이 모델을 테스트하기 위한 알려지지 않은 데이터셋(검증 데이터셋)이 주어진다. 교차 검증의 목적은 모델이 학습에 사용되지 않은 새로운 데이터에 대해 예측할 수 있는 능력을 검사함으로써 과적합이나 선택 편향의 문제를 해결하고 그 모델이 얼마나 다른 데이터셋으로 일반화될 수 있는지에 대한 인사이트를 주는 것에 있다.\n\n이 함수는 두 개의 입력값을 갖는다. 하나는 학습하기 위한 데이터셋 테이블이고, 다른 하나는 어떤 함수에 대해 교차 검증을 수행할지를 알려주기 위한 train 함수이다. Train 함수가 이 함수와 연결되면 원래 train 함수에 있었던 파라미터들이 Cross Validator 함수의 파라미터 조정창에 자동적으로 등장한다. 원래 train 함수는 오직 어떤 분류/회귀 함수에 교차 검증을 수행할지를 알려주기 위해 쓰일 뿐이고, 그 함수의 파라미터 조정창에서 파라미터를 따로 세팅할 필요는 없음을 유의해야 한다. (이 train 함수는 실제로 실행되지는 않고 Cross Validator 함수로 어떤 분류/회귀 함수가 사용되는지에 대한 정보만을 전달한다.)\n\nReference\n+ <https://en.wikipedia.org/wiki/Cross-validation_(statistics)>\n\n## Properties\n### VA\n#### INPUT\n1. **table**<b style=\"color:red\">*</b>: (Table) 학습에 사용할 데이터셋.\n#### OUTPUT\n1. **model**: (Model) 교차 검증의 결과.\n#### PARAMETER\n1. **K-Fold**<b style=\"color:red\">*</b>: 교차 검증을 위한 split 갯수. 2 이상의 값을 입력해야 한다.\n2. **Scoring**: 검증에 사용할 점수 척도(scoring metric). 분류의 경우 Accuracy를, 이진 분류의 경우 F1, Precision, Recall을, 회귀의 경우 R2, Negative MSE를 사용할 수 있다.\n3. **Shuffle**: Shuffled cross validation을 수행할지의 여부.\n4. **Stratify**: Stratified cross validation을 수행할지의 여부.\n5. **Seed for Cross Validation**: Shuffled cross validation에서 사용할 시드값.\n\n### Python\n#### USAGE\n\n```\ncross_validator(table = , cv_n_splits = , cv_scoring = , cv_shuffle = False, cv_stratify = False, cv_seed = )\n```\n\n#### INPUT\n1. **table**<b style=\"color:red\">*</b>: (Table) 학습에 사용할 데이터셋.\n#### OUTPUT\n1. **model**: (Model) 교차 검증의 결과.\n#### PARAMETER\n1. **cv_n_splits**<b style=\"color:red\">*</b>: 교차 검증을 위한 split 갯수. 2 이상의 값을 입력해야 한다.\n\t* Type: *int*\n\t* Default / Range: 3 (value >= 2)\n2. **cv_scoring**: 검증에 사용할 점수 척도(scoring metric). 분류의 경우 Accuracy를, 이진 분류의 경우 F1, Precision, Recall을, 회귀의 경우 R2, Negative MSE를 사용할 수 있다.\n\t* Type: *str*\n\t* Default / Range: accuracy ( accuracy | f1 | precision | recall | r2 | neg_mean_squared_error )\n3. **cv_shuffle**: Shuffled cross validation을 수행할지의 여부.\n\t* Type: *bool*\n\t* Default value: false \n4. **cv_stratify**: Stratified cross validation을 수행할지의 여부.\n\t* Type: *bool*\n\t* Default value: false \n5. **cv_seed**: Shuffled cross validation에서 사용할 시드값.\n\t* Type: *int*\n\t* Default value: None\n\n\n\n\n"
    },
    "exampleModels": [],
    "sampleImages": [],
    "scriptExamples": []
}