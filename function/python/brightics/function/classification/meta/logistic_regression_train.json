{
    "script": {
        "type": "",
        "content": ""
    },
    "specJson": {
        "category": "classification",
        "func": "brightics.function.classification$logistic_regression_train",
        "name": "brightics.function.classification$logistic_regression_train",
        "context": "python",
        "label": "Logistic Regression Train",
        "description": "Fit a logistic regression model. In statistics, logistic regression, or logit regression, or logit model[1] is a regression model where the dependent variable (DV) is categorical. This covers the case of a binary dependent variable. That is, where it can take only two values, '0' and '1', which represent outcomes such as pass/fail, win/lose, alive/dead or healthy/sick.\n\nhttps://en.wikipedia.org/wiki/Logistic_regression",
        "tags": [],
        "version": "3.6",
        "inputs": {
            "table": ""
        },
        "outputs": {
            "model": ""
        },
        "meta": {
            "table": {
                "type": "table"
            },
            "model": {
                "type": "model"
            }
        },
        "params": [
            {
                "id": "feature_cols",
                "label": "Feature Columns",
                "description": "",
                "mandatory": true,
                "items": [],
                "visibleOption": [],
                "control": "ColumnSelector",
                "columnType": [
                    "Integer",
                    "Long",
                    "Float",
                    "Double",
                    "Double[]"
                ],
                "validation": [],
                "multiple": true,
                "rowCount": 5
            },
            {
                "id": "label_col",
                "label": "Label Column",
                "description": "",
                "mandatory": true,
                "items": [],
                "visibleOption": [],
                "control": "ColumnSelector",
                "columnType": [
                    "Integer",
                    "Long",
                    "Float",
                    "Double",
                    "String"
                ],
                "validation": [],
                "multiple": false
            },
            {
                "id": "fit_intercept",
                "label": "Fit Intercept",
                "description": "Whether to fit an intercept",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "BooleanRadio",
                "columnType": [],
                "validation": [],
                "defaultValue": true
            },
            {
                "id": "penalty",
                "label": "Penalty",
                "description": "Penalty term",
                "mandatory": false,
                "items": [
                    {
                        "label": "l1",
                        "value": "l1",
                        "default": false
                    },
                    {
                        "label": "l2",
                        "value": "l2",
                        "default": true
                    }
                ],
                "visibleOption": [],
                "control": "RadioButton",
                "columnType": [],
                "validation": []
            },
            {
                "id": "C",
                "label": "Inverse of Regularization",
                "description": "Regularization term",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "type": "Double",
                "placeHolder": "1.0 (value > 0.0)"
            },
            {
                "id": "solver",
                "label": "Solver",
                "description": "Solver to use",
                "mandatory": false,
                "items": [
                    {
                        "label": "newton-cg",
                        "value": "newton-cg",
                        "default": false
                    },
                    {
                        "label": "lbfgs",
                        "value": "lbfgs",
                        "default": false
                    },
                    {
                        "label": "liblinear",
                        "value": "liblinear",
                        "default": true
                    },
                    {
                        "label": "sag",
                        "value": "sag",
                        "default": false
                    },
                    {
                        "label": "saga",
                        "value": "saga",
                        "default": false
                    }
                ],
                "visibleOption": [],
                "control": "RadioButton",
                "columnType": [],
                "validation": []
            },
            {
                "id": "random_state",
                "label": "Seed",
                "description": "Seed",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "type": "Integer"
            },
            {
                "id": "max_iter",
                "label": "Max Iteration",
                "description": "Maximum number of iteration",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "type": "Integer",
                "min": 1,
                "placeHolder": "100 (value >=1)"
            },
            {
                "id": "tol",
                "label": "Tolerance",
                "description": "Tolerance for stopping criterion",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "InputBox",
                "columnType": [],
                "validation": [],
                "placeHolder": "0.0001 (value > 0.0)",
                "type": "Double"
            },
            {
                "id": "group_by",
                "label": "Group By",
                "description": "",
                "mandatory": false,
                "items": [],
                "visibleOption": [],
                "control": "ColumnSelector",
                "columnType": [],
                "validation": [],
                "multiple": true,
                "rowCount": 5
            }
        ]
    },
    "md": ""
}